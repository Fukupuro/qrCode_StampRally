openapi: 3.0.0
info:
  title: Go×React Template
  description: Go言語とReactを使ったWebアプリケーションのテンプレート
  version: "0.1"
servers:
  - url: http://localhost:5173/api
    description: ローカル開発環境

tags:
  - name: Hello
    description: Helloに関する操作
paths:
  /hello:
    get:
      summary: Helloというメッセージを返す
      tags:
        - Hello
      operationId: get-hello
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseMessage'
  /hellos:
    get:
      summary: Helloというメッセージを複数返す
      tags:
        - Hello
      operationId: get-hellos
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/responseMessage'
  
  /user:
    get:
      summary: ユーザー一覧を取得する
      tags:
        - User
      operationId: get-user
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userAuthData'
        '500':
          description: サーバーエラー
  /user/signin:
    post:
      summary: ユーザーをサインインさせる
      tags:
        - User
      operationId: post-signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userAuthData'
              required:
                - username
                - password
      responses:
        '200':
          description: 成功
        '401':
          description: ユーザーが存在しないかパスワードが間違っている
        '500':
          description: サーバーエラー
  /user/signup:
    post:
      summary: ユーザーを追加する
      tags:
        - User
      operationId: post-signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userAuthData'
              required:
                - username
                - password
      responses:
        '201':
          description: 成功
        '409':
          description: ユーザIDが既に存在している

components:
  schemas:
    responseMessage:
      type: object
      properties:
        message:
          type: string
    userAuthData:
      type: object
      properties:
        username:
          type: string
        password:
          type: string